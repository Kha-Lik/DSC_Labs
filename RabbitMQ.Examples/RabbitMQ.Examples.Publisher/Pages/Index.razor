@page "/"
@using System.Xml
@using Newtonsoft.Json
@using RabbitMQ.Client
@using RabbitMQ.Examples.Publisher.Models
@using System.Text

@inject IToastService _toastService

<PageTitle>Main</PageTitle>

<h1>RabbitMQ Test App</h1>

<InputFile OnChange="@LoadFiles"/>
<p>
    <button style="margin-top: 10px" class="btn-primary" @onclick="SubmitFile">Submit</button>
</p>

@code {
    private IBrowserFile _file = null!;

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        _file = e.File;
    }

    private async void SubmitFile()
    {
        var xmlString = await new StreamReader(_file.OpenReadStream()).ReadToEndAsync();
        var xmlDoc = new XmlDocument();
        xmlDoc.LoadXml(xmlString);
        if (!XmlHelper.ValidateXml(xmlDoc, out var errors))
        {
            _toastService.ShowError(string.Join("\n\n", errors), "Invalid xml file!");
            return;
        }

        var tariff = XmlHelper.ProcessXml(xmlDoc);
        var tariffJson = JsonConvert.SerializeObject(tariff);
        PublishTariffToRabbitQueue(tariffJson);
        _toastService.ShowSuccess("Successfully submitted tariff");
    }

    private void PublishTariffToRabbitQueue(string tariffJson)
    {
        var factory = new ConnectionFactory() { Endpoint = new AmqpTcpEndpoint("localhost", 5672), UserName = "user", Password = "bitnami" };
        using var connection = factory.CreateConnection();
        using var channel = connection.CreateModel();

        channel.QueueDeclare("tariffs-queue", true, false, false, null);

        var body = Encoding.UTF8.GetBytes(tariffJson);

        channel.BasicPublish(string.Empty, "tariffs-queue", null, body);
    }

}