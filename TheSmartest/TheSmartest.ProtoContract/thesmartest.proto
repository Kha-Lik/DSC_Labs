syntax = "proto3";

package TheSmartest;

service Game {
  rpc RegisterPlayer (PlayerRequest) returns (PlayerAnswer) {}

  rpc CheckGameStatus (CheckStatusRequest) returns (CheckStatusResponse) {}

  rpc VoteForStart (VoteRequest) returns (VoteResponse) {}
  
  rpc GetQuestion (QuestionRequest) returns (QuestionResponse) {}
  
  rpc SendAnswer (AnswerRequest) returns (AnswerResponse) {}

  rpc GetWinner (WinnerRequest) returns (WinnerResponse) {}
}

message PlayerRequest {
  string PlayerName = 2;
}

message PlayerAnswer {
  bool Success = 1;
  int32 PlayerId = 2;
  int32 TotalPlayers = 3;
  string ErrorMessage = 4;
}

message CheckStatusRequest {}

message CheckStatusResponse {
  GameStatus Status = 1;
  int32 Votes = 2;
  int32 TotalPlayers = 3;
  int32 TotalQuestions = 4;
}

enum GameStatus{
  option allow_alias = true;
  UNAVAILABLE = 0;
  WAITING_FOR_START = 1;
  STARTED = 2;
  CONTINUES = 2;
  FINISHED = 3;
}

message VoteRequest {
  int32 PlayerId = 1;
}

message VoteResponse {
  bool Success = 1;
  string ErrorMessage = 2;
}

message QuestionRequest {
  int32 PlayerId = 1;
  int32 PreviousQuestionId = 2;
}

message QuestionResponse {
  int32 QuestionId = 1;
  string Question = 2;
  repeated Answer Answers = 3;
}

message Answer {
  int32 AnswerId = 1;
  int32 QuestionId = 2;
  string AnswerText = 3;
}

message AnswerRequest {
  int32 PlayerId = 1;
  int32 QuestionId = 2;
  int32 AnswerId = 3;
}

message AnswerResponse {
  bool IsCorrect = 1;
}

message WinnerRequest {}

message WinnerResponse {
  oneof kind {
    Player Winner = 1;
    Players Winners = 2;
  }
  repeated Player ScoreTable = 3;
}

message Players{
  repeated Player PlayersList = 1;
}

message Player {
  string Name = 1;
  int32 Score = 2;
}
  